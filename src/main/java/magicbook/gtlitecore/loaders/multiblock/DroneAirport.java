package magicbook.gtlitecore.loaders.multiblock;

import gregtech.api.metatileentity.multiblock.CleanroomType;

import static gregtech.api.GTValues.*;
import static gregtech.api.recipes.RecipeMaps.*;
import static gregtech.api.unification.material.Materials.*;
import static gregtech.api.unification.ore.OrePrefix.*;
import static gregtech.common.items.MetaItems.*;
import static magicbook.gtlitecore.api.recipe.GTLiteRecipeMaps.*;
import static magicbook.gtlitecore.api.unification.GTLiteMaterials.*;
import static magicbook.gtlitecore.common.items.GTLiteMetaItems.*;

public class DroneAirport {

    public static void init() {
        DroneRecipes();
        LVstage();
        MVstage();
        HVstage();
        EVstage();
    }

    private static void DroneRecipes() {

        //  LV
        ASSEMBLER_RECIPES.recipeBuilder()
                .input(frameGt, Steel)
                .input(ROBOT_ARM_LV, 2)
                .input(SENSOR_LV, 2)
                .input(cableGtSingle, Tin, 2)
                .fluidInputs(SolderingAlloy.getFluid(L))
                .output(MINING_DRONE_LV)
                .EUt(VA[LV])
                .duration(200)
                .buildAndRegister();

        //  MV
        ASSEMBLER_RECIPES.recipeBuilder()
                .input(frameGt, Aluminium)
                .input(ROBOT_ARM_MV, 2)
                .input(SENSOR_MV, 2)
                .input(cableGtSingle, Copper, 2)
                .fluidInputs(SolderingAlloy.getFluid(L))
                .output(MINING_DRONE_MV)
                .EUt(VA[MV])
                .duration(200)
                .buildAndRegister();

        //  HV
        ASSEMBLER_RECIPES.recipeBuilder()
                .input(frameGt, StainlessSteel)
                .input(ROBOT_ARM_HV, 2)
                .input(SENSOR_HV, 2)
                .input(cableGtSingle, Gold, 2)
                .fluidInputs(SolderingAlloy.getFluid(L))
                .output(MINING_DRONE_HV)
                .EUt(VA[HV])
                .duration(200)
                .cleanroom(CleanroomType.CLEANROOM)
                .buildAndRegister();

        //  EV
        ASSEMBLER_RECIPES.recipeBuilder()
                .input(frameGt, Titanium)
                .input(ROBOT_ARM_EV, 2)
                .input(SENSOR_EV, 2)
                .input(cableGtSingle, Aluminium, 2)
                .fluidInputs(SolderingAlloy.getFluid(L))
                .output(MINING_DRONE_EV)
                .EUt(VA[EV])
                .duration(200)
                .cleanroom(CleanroomType.CLEANROOM)
                .buildAndRegister();

        //  IV
        ASSEMBLER_RECIPES.recipeBuilder()
                .input(frameGt, TungstenSteel)
                .input(ROBOT_ARM_IV, 2)
                .input(SENSOR_IV, 2)
                .input(cableGtSingle, Platinum, 2)
                .fluidInputs(SolderingAlloy.getFluid(L))
                .output(MINING_DRONE_IV)
                .EUt(VA[IV])
                .duration(200)
                .cleanroom(CleanroomType.CLEANROOM)
                .buildAndRegister();

        //  LuV
        ASSEMBLY_LINE_RECIPES.recipeBuilder()
                .input(frameGt, RhodiumPlatedPalladium)
                .input(ROBOT_ARM_LuV, 2)
                .input(SENSOR_LuV, 2)
                .input(cableGtSingle, NiobiumTitanium, 2)
                .fluidInputs(SolderingAlloy.getFluid(L * 4))
                .fluidInputs(Cupronickel.getFluid(L))
                .output(MINING_DRONE_LuV)
                .EUt(VA[LuV])
                .duration(200)
                .scannerResearch(b -> b
                        .researchStack(MINING_DRONE_IV.getStackForm())
                        .EUt(VA[IV])
                        .duration(400))
                .buildAndRegister();

        //  ZPM
        ASSEMBLY_LINE_RECIPES.recipeBuilder()
                .input(frameGt, NaquadahAlloy)
                .input(ROBOT_ARM_ZPM, 2)
                .input(SENSOR_ZPM, 2)
                .input(cableGtSingle, VanadiumGallium, 2)
                .fluidInputs(SolderingAlloy.getFluid(L * 4))
                .fluidInputs(Kanthal.getFluid(L))
                .output(MINING_DRONE_ZPM)
                .EUt(VA[ZPM])
                .duration(200)
                .scannerResearch(b -> b
                        .researchStack(MINING_DRONE_LuV.getStackForm())
                        .EUt(VA[LuV])
                        .duration(400))
                .buildAndRegister();

        //  UV
        ASSEMBLY_LINE_RECIPES.recipeBuilder()
                .input(frameGt, Darmstadtium)
                .input(ROBOT_ARM_UV, 2)
                .input(SENSOR_UV, 2)
                .input(cableGtSingle, YttriumBariumCuprate, 2)
                .fluidInputs(SolderingAlloy.getFluid(L * 4))
                .fluidInputs(Nichrome.getFluid(L))
                .output(MINING_DRONE_UV)
                .EUt(VA[UV])
                .duration(200)
                .stationResearch(b -> b
                        .researchStack(MINING_DRONE_ZPM.getStackForm())
                        .EUt(VA[ZPM])
                        .CWUt(32))
                .buildAndRegister();

        //  UHV
        ASSEMBLY_LINE_RECIPES.recipeBuilder()
                .input(frameGt, Orichalcum)
                .input(ROBOT_ARM_UHV, 2)
                .input(SENSOR_UHV, 2)
                .input(cableGtSingle, Europium, 2)
                .fluidInputs(SolderingAlloy.getFluid(L * 4))
                .fluidInputs(RTMAlloy.getFluid(L))
                .output(MINING_DRONE_UHV)
                .EUt(VA[UHV])
                .duration(200)
                .stationResearch(b -> b
                        .researchStack(MINING_DRONE_UV.getStackForm())
                        .EUt(VA[UV])
                        .CWUt(64))
                .buildAndRegister();

        //  UEV
        ASSEMBLY_LINE_RECIPES.recipeBuilder()
                .input(frameGt, Adamantium)
                .input(ROBOT_ARM_UEV, 2)
                .input(SENSOR_UEV, 2)
                .input(cableGtSingle, PedotTMA, 2)
                .fluidInputs(SolderingAlloy.getFluid(L * 4))
                .fluidInputs(HSSG.getFluid(L))
                .output(MINING_DRONE_UEV)
                .EUt(VA[UEV])
                .duration(200)
                .stationResearch(b -> b
                        .researchStack(MINING_DRONE_UHV.getStackForm())
                        .EUt(VA[UHV])
                        .CWUt(96))
                .buildAndRegister();

        //  UIV
        ASSEMBLY_LINE_RECIPES.recipeBuilder()
                .input(frameGt, Infinity)
                .input(ROBOT_ARM_UIV, 2)
                .input(SENSOR_UIV, 2)
                .input(cableGtSingle, Solarium, 2)
                .fluidInputs(SolderingAlloy.getFluid(L * 4))
                .fluidInputs(Naquadah.getFluid(L))
                .output(MINING_DRONE_UIV)
                .EUt(VA[UIV])
                .duration(200)
                .stationResearch(b -> b
                        .researchStack(MINING_DRONE_UEV.getStackForm())
                        .EUt(VA[UEV])
                        .CWUt(128))
                .buildAndRegister();

        //  UXV
        ASSEMBLY_LINE_RECIPES.recipeBuilder()
                .input(frameGt, CosmicNeutronium)
                .input(ROBOT_ARM_UXV, 2)
                .input(SENSOR_UXV, 2)
                .input(cableGtSingle, Hypogen, 2)
                .fluidInputs(SolderingAlloy.getFluid(L * 4))
                .fluidInputs(Trinium.getFluid(L))
                .output(MINING_DRONE_UXV)
                .EUt(VA[UXV])
                .duration(200)
                .stationResearch(b -> b
                        .researchStack(MINING_DRONE_UIV.getStackForm())
                        .EUt(VA[UIV])
                        .CWUt(160))
                .buildAndRegister();

        //  OpV
        ASSEMBLY_LINE_RECIPES.recipeBuilder()
                .input(frameGt, Spacetime)
                .input(ROBOT_ARM_OpV, 2)
                .input(SENSOR_OpV, 2)
                .input(cableGtSingle, Galaxium, 2)
                .fluidInputs(SolderingAlloy.getFluid(L * 4))
                .fluidInputs(Tritanium.getFluid(L))
                .output(MINING_DRONE_OpV)
                .EUt(VA[OpV])
                .duration(200)
                .stationResearch(b -> b
                        .researchStack(MINING_DRONE_UXV.getStackForm())
                        .EUt(VA[UXV])
                        .CWUt(192))
                .buildAndRegister();

        //  MAX
        ASSEMBLY_LINE_RECIPES.recipeBuilder()
                .input(frameGt, Eternity)
                .input(ROBOT_ARM_MAX, 2)
                .input(SENSOR_MAX, 2)
                .input(cableGtSingle, Universium, 2)
                .fluidInputs(SolderingAlloy.getFluid(L * 4))
                .fluidInputs(Adamantium.getFluid(L))
                .output(MINING_DRONE_MAX)
                .EUt(VA[MAX])
                .duration(200)
                .stationResearch(b -> b
                        .researchStack(MINING_DRONE_OpV.getStackForm())
                        .EUt(VA[OpV])
                        .CWUt(224))
                .buildAndRegister();
    }

    private static void LVstage() {

        //  Iron-Copper-Gold
        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_LV)
                .circuitMeta(1)
                .fluidInputs(RocketFuel.getFluid(100))
                .chancedOutput(ore, Iron, 64, 8000, 500)
                .chancedOutput(ore, Copper, 64, 8000, 500)
                .chancedOutput(ore, Gold, 64, 6000, 500)
                .chancedOutput(ore, Magnetite, 64, 9000, 500)
                .chancedOutput(ore, VanadiumMagnetite, 64, 8000, 500)
                .chancedOutput(ore, Pyrite, 64, 8000, 500)
                .chancedOutput(ore, Chalcopyrite, 64, 9000, 500)
                .chancedOutput(ore, Sphalerite, 64, 6000, 500)
                .chancedOutput(ore, Aluminium, 64, 6000, 500)
                .EUt(VA[LV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_LV)
                .circuitMeta(1)
                .fluidInputs(RP1RocketFuel.getFluid(100))
                .chancedOutput(ore, Iron, 64, 8000, 500)
                .chancedOutput(ore, Copper, 64, 8000, 500)
                .chancedOutput(ore, Gold, 64, 6000, 500)
                .chancedOutput(ore, Magnetite, 64, 9000, 500)
                .chancedOutput(ore, VanadiumMagnetite, 64, 8000, 500)
                .chancedOutput(ore, Pyrite, 64, 8000, 500)
                .chancedOutput(ore, Chalcopyrite, 64, 9000, 500)
                .chancedOutput(ore, Sphalerite, 64, 6000, 500)
                .chancedOutput(ore, Aluminium, 64, 6000, 500)
                .EUt(VA[LV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_LV)
                .circuitMeta(11)
                .fluidInputs(DenseHydrazineMixtureFuel.getFluid(100))
                .chancedOutput(ore, Iron, 64, 8000, 500)
                .chancedOutput(ore, Copper, 64, 8000, 500)
                .chancedOutput(ore, Gold, 64, 6000, 500)
                .chancedOutput(ore, Magnetite, 64, 9000, 500)
                .chancedOutput(ore, VanadiumMagnetite, 64, 8000, 500)
                .chancedOutput(ore, Pyrite, 64, 8000, 500)
                .chancedOutput(ore, Chalcopyrite, 64, 9000, 500)
                .chancedOutput(ore, Sphalerite, 64, 6000, 500)
                .chancedOutput(ore, Aluminium, 64, 6000, 500)
                .EUt(VA[LV])
                .duration(200)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_LV)
                .circuitMeta(11)
                .fluidInputs(MethylhydrazineNitrateRocketFuel.getFluid(100))
                .chancedOutput(ore, Iron, 64, 8000, 500)
                .chancedOutput(ore, Copper, 64, 8000, 500)
                .chancedOutput(ore, Gold, 64, 6000, 500)
                .chancedOutput(ore, Magnetite, 64, 9000, 500)
                .chancedOutput(ore, VanadiumMagnetite, 64, 8000, 500)
                .chancedOutput(ore, Pyrite, 64, 8000, 500)
                .chancedOutput(ore, Chalcopyrite, 64, 9000, 500)
                .chancedOutput(ore, Sphalerite, 64, 6000, 500)
                .chancedOutput(ore, Aluminium, 64, 6000, 500)
                .EUt(VA[LV])
                .duration(200)
                .buildAndRegister();

        //  Nickel-Cobalt-Sulfur
        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_LV)
                .circuitMeta(2)
                .fluidInputs(RocketFuel.getFluid(100))
                .chancedOutput(ore, Nickel, 64, 8000, 500)
                .chancedOutput(ore, Cobalt, 64, 7000, 500)
                .chancedOutput(ore, Sulfur, 64, 9000, 500)
                .chancedOutput(ore, Garnierite, 64, 7000, 500)
                .chancedOutput(ore, Pentlandite, 64, 6000, 500)
                .chancedOutput(ore, YellowLimonite, 64, 9000, 500)
                .chancedOutput(ore, BrownLimonite, 64, 9000, 500)
                .chancedOutput(ore, BandedIron, 64, 8000, 500)
                .chancedOutput(ore, Cobaltite, 64, 6000, 500)
                .EUt(VA[LV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_LV)
                .circuitMeta(2)
                .fluidInputs(RP1RocketFuel.getFluid(100))
                .chancedOutput(ore, Nickel, 64, 8000, 500)
                .chancedOutput(ore, Cobalt, 64, 7000, 500)
                .chancedOutput(ore, Sulfur, 64, 9000, 500)
                .chancedOutput(ore, Garnierite, 64, 7000, 500)
                .chancedOutput(ore, Pentlandite, 64, 6000, 500)
                .chancedOutput(ore, YellowLimonite, 64, 9000, 500)
                .chancedOutput(ore, BrownLimonite, 64, 9000, 500)
                .chancedOutput(ore, BandedIron, 64, 8000, 500)
                .chancedOutput(ore, Cobaltite, 64, 6000, 500)
                .EUt(VA[LV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_LV)
                .circuitMeta(12)
                .fluidInputs(DenseHydrazineMixtureFuel.getFluid(100))
                .chancedOutput(ore, Nickel, 64, 8000, 500)
                .chancedOutput(ore, Cobalt, 64, 7000, 500)
                .chancedOutput(ore, Sulfur, 64, 9000, 500)
                .chancedOutput(ore, Garnierite, 64, 7000, 500)
                .chancedOutput(ore, Pentlandite, 64, 6000, 500)
                .chancedOutput(ore, YellowLimonite, 64, 9000, 500)
                .chancedOutput(ore, BrownLimonite, 64, 9000, 500)
                .chancedOutput(ore, BandedIron, 64, 8000, 500)
                .chancedOutput(ore, Cobaltite, 64, 6000, 500)
                .EUt(VA[LV])
                .duration(200)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_LV)
                .circuitMeta(12)
                .fluidInputs(MethylhydrazineNitrateRocketFuel.getFluid(100))
                .chancedOutput(ore, Nickel, 64, 8000, 500)
                .chancedOutput(ore, Cobalt, 64, 7000, 500)
                .chancedOutput(ore, Sulfur, 64, 9000, 500)
                .chancedOutput(ore, Garnierite, 64, 7000, 500)
                .chancedOutput(ore, Pentlandite, 64, 6000, 500)
                .chancedOutput(ore, YellowLimonite, 64, 9000, 500)
                .chancedOutput(ore, BrownLimonite, 64, 9000, 500)
                .chancedOutput(ore, BandedIron, 64, 8000, 500)
                .chancedOutput(ore, Cobaltite, 64, 6000, 500)
                .EUt(VA[LV])
                .duration(200)
                .buildAndRegister();

        //  Salt-Rock Salt
        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_LV)
                .circuitMeta(3)
                .fluidInputs(RocketFuel.getFluid(100))
                .chancedOutput(ore, Salt, 64, 9000, 500)
                .chancedOutput(ore, RockSalt, 64, 9000, 500)
                .chancedOutput(ore, Realgar, 64, 7000, 500)
                .chancedOutput(ore, Zeolite, 64, 8000, 500)
                .chancedOutput(ore, Asbestos, 64, 9000, 500)
                .chancedOutput(ore, Lepidolite, 64, 7000, 500)
                .chancedOutput(ore, Spodumene, 64, 7000, 500)
                .chancedOutput(ore, Grossular, 64, 6000, 500)
                .chancedOutput(ore, Gypsum, 64, 7000, 500)
                .EUt(VA[LV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_LV)
                .circuitMeta(3)
                .fluidInputs(RP1RocketFuel.getFluid(100))
                .chancedOutput(ore, Salt, 64, 9000, 500)
                .chancedOutput(ore, RockSalt, 64, 9000, 500)
                .chancedOutput(ore, Realgar, 64, 7000, 500)
                .chancedOutput(ore, Zeolite, 64, 8000, 500)
                .chancedOutput(ore, Asbestos, 64, 9000, 500)
                .chancedOutput(ore, Lepidolite, 64, 7000, 500)
                .chancedOutput(ore, Spodumene, 64, 7000, 500)
                .chancedOutput(ore, Grossular, 64, 6000, 500)
                .chancedOutput(ore, Gypsum, 64, 7000, 500)
                .EUt(VA[LV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_LV)
                .circuitMeta(13)
                .fluidInputs(DenseHydrazineMixtureFuel.getFluid(100))
                .chancedOutput(ore, Salt, 64, 9000, 500)
                .chancedOutput(ore, RockSalt, 64, 9000, 500)
                .chancedOutput(ore, Realgar, 64, 7000, 500)
                .chancedOutput(ore, Zeolite, 64, 8000, 500)
                .chancedOutput(ore, Asbestos, 64, 9000, 500)
                .chancedOutput(ore, Lepidolite, 64, 7000, 500)
                .chancedOutput(ore, Spodumene, 64, 7000, 500)
                .chancedOutput(ore, Grossular, 64, 6000, 500)
                .chancedOutput(ore, Gypsum, 64, 7000, 500)
                .EUt(VA[LV])
                .duration(200)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_LV)
                .circuitMeta(13)
                .fluidInputs(MethylhydrazineNitrateRocketFuel.getFluid(100))
                .chancedOutput(ore, Salt, 64, 9000, 500)
                .chancedOutput(ore, RockSalt, 64, 9000, 500)
                .chancedOutput(ore, Realgar, 64, 7000, 500)
                .chancedOutput(ore, Zeolite, 64, 8000, 500)
                .chancedOutput(ore, Asbestos, 64, 9000, 500)
                .chancedOutput(ore, Lepidolite, 64, 7000, 500)
                .chancedOutput(ore, Spodumene, 64, 7000, 500)
                .chancedOutput(ore, Grossular, 64, 6000, 500)
                .chancedOutput(ore, Gypsum, 64, 7000, 500)
                .EUt(VA[LV])
                .duration(200)
                .buildAndRegister();

        //  Quartzites
        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_LV)
                .circuitMeta(4)
                .fluidInputs(RocketFuel.getFluid(100))
                .chancedOutput(ore, Quartzite, 64, 9000, 500)
                .chancedOutput(ore, NetherQuartz, 64, 8000, 500)
                .chancedOutput(ore, CertusQuartz, 64, 8000, 500)
                .chancedOutput(ore, Barite, 64, 7000, 500)
                .chancedOutput(ore, BasalticMineralSand, 64, 7000, 500)
                .chancedOutput(ore, GraniticMineralSand, 64, 7000, 500)
                .chancedOutput(ore, FullersEarth, 64, 8000, 500)
                .chancedOutput(ore, Topaz, 64, 6000, 500)
                .chancedOutput(ore, BlueTopaz, 64, 6000, 500)
                .EUt(VA[LV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_LV)
                .circuitMeta(4)
                .fluidInputs(RP1RocketFuel.getFluid(100))
                .chancedOutput(ore, Quartzite, 64, 9000, 500)
                .chancedOutput(ore, NetherQuartz, 64, 8000, 500)
                .chancedOutput(ore, CertusQuartz, 64, 8000, 500)
                .chancedOutput(ore, Barite, 64, 7000, 500)
                .chancedOutput(ore, BasalticMineralSand, 64, 7000, 500)
                .chancedOutput(ore, GraniticMineralSand, 64, 7000, 500)
                .chancedOutput(ore, FullersEarth, 64, 8000, 500)
                .chancedOutput(ore, Topaz, 64, 6000, 500)
                .chancedOutput(ore, BlueTopaz, 64, 6000, 500)
                .EUt(VA[LV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_LV)
                .circuitMeta(14)
                .fluidInputs(DenseHydrazineMixtureFuel.getFluid(100))
                .chancedOutput(ore, Quartzite, 64, 9000, 500)
                .chancedOutput(ore, NetherQuartz, 64, 8000, 500)
                .chancedOutput(ore, CertusQuartz, 64, 8000, 500)
                .chancedOutput(ore, Barite, 64, 7000, 500)
                .chancedOutput(ore, BasalticMineralSand, 64, 7000, 500)
                .chancedOutput(ore, GraniticMineralSand, 64, 7000, 500)
                .chancedOutput(ore, FullersEarth, 64, 8000, 500)
                .chancedOutput(ore, Topaz, 64, 6000, 500)
                .chancedOutput(ore, BlueTopaz, 64, 6000, 500)
                .EUt(VA[LV])
                .duration(200)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_LV)
                .circuitMeta(14)
                .fluidInputs(MethylhydrazineNitrateRocketFuel.getFluid(100))
                .chancedOutput(ore, Quartzite, 64, 9000, 500)
                .chancedOutput(ore, NetherQuartz, 64, 8000, 500)
                .chancedOutput(ore, CertusQuartz, 64, 8000, 500)
                .chancedOutput(ore, Barite, 64, 7000, 500)
                .chancedOutput(ore, BasalticMineralSand, 64, 7000, 500)
                .chancedOutput(ore, GraniticMineralSand, 64, 7000, 500)
                .chancedOutput(ore, FullersEarth, 64, 8000, 500)
                .chancedOutput(ore, Topaz, 64, 6000, 500)
                .chancedOutput(ore, BlueTopaz, 64, 6000, 500)
                .EUt(VA[LV])
                .duration(200)
                .buildAndRegister();
    }

    private static void MVstage() {

        //  Lead-Silver-Copper
        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_MV)
                .circuitMeta(1)
                .fluidInputs(RocketFuel.getFluid(200))
                .chancedOutput(ore, Lead, 64, 8000, 500)
                .chancedOutput(ore, Silver, 64, 6000, 500)
                .chancedOutput(ore, Tin, 64, 9000, 500)
                .chancedOutput(ore, Galena, 64, 8000, 500)
                .chancedOutput(ore, Cassiterite, 64, 7000, 500)
                .chancedOutput(ore, CassiteriteSand, 64, 6000, 500)
                .chancedOutput(ore, Tetrahedrite, 64, 8000, 500)
                .chancedOutput(ore, Stibnite, 64, 6000, 500)
                .chancedOutput(ore, Bauxite, 64, 7000, 500)
                .EUt(VA[MV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_MV)
                .circuitMeta(1)
                .fluidInputs(RP1RocketFuel.getFluid(200))
                .chancedOutput(ore, Lead, 64, 8000, 500)
                .chancedOutput(ore, Silver, 64, 6000, 500)
                .chancedOutput(ore, Tin, 64, 9000, 500)
                .chancedOutput(ore, Galena, 64, 8000, 500)
                .chancedOutput(ore, Cassiterite, 64, 7000, 500)
                .chancedOutput(ore, CassiteriteSand, 64, 6000, 500)
                .chancedOutput(ore, Tetrahedrite, 64, 8000, 500)
                .chancedOutput(ore, Stibnite, 64, 6000, 500)
                .chancedOutput(ore, Bauxite, 64, 7000, 500)
                .EUt(VA[MV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_MV)
                .circuitMeta(11)
                .fluidInputs(DenseHydrazineMixtureFuel.getFluid(200))
                .chancedOutput(ore, Lead, 64, 8000, 500)
                .chancedOutput(ore, Silver, 64, 6000, 500)
                .chancedOutput(ore, Tin, 64, 9000, 500)
                .chancedOutput(ore, Galena, 64, 8000, 500)
                .chancedOutput(ore, Cassiterite, 64, 7000, 500)
                .chancedOutput(ore, CassiteriteSand, 64, 6000, 500)
                .chancedOutput(ore, Tetrahedrite, 64, 8000, 500)
                .chancedOutput(ore, Stibnite, 64, 6000, 500)
                .chancedOutput(ore, Bauxite, 64, 7000, 500)
                .EUt(VA[MV])
                .duration(200)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_MV)
                .circuitMeta(11)
                .fluidInputs(MethylhydrazineNitrateRocketFuel.getFluid(200))
                .chancedOutput(ore, Lead, 64, 8000, 500)
                .chancedOutput(ore, Silver, 64, 6000, 500)
                .chancedOutput(ore, Tin, 64, 9000, 500)
                .chancedOutput(ore, Galena, 64, 8000, 500)
                .chancedOutput(ore, Cassiterite, 64, 7000, 500)
                .chancedOutput(ore, CassiteriteSand, 64, 6000, 500)
                .chancedOutput(ore, Tetrahedrite, 64, 8000, 500)
                .chancedOutput(ore, Stibnite, 64, 6000, 500)
                .chancedOutput(ore, Bauxite, 64, 7000, 500)
                .EUt(VA[MV])
                .duration(200)
                .buildAndRegister();

        //  Redstone-Diamond-Thorium
        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_MV)
                .circuitMeta(2)
                .fluidInputs(RocketFuel.getFluid(200))
                .chancedOutput(ore, Redstone, 64, 8000, 500)
                .chancedOutput(ore, Diamond, 64, 7000, 500)
                .chancedOutput(ore, Emerald, 64, 6000, 500)
                .chancedOutput(ore, Ruby, 64, 6000, 500)
                .chancedOutput(ore, Cinnabar, 64, 7000, 500)
                .chancedOutput(ore, Coal, 64, 9000, 500)
                .chancedOutput(ore, Graphite, 64, 6000, 500)
                .chancedOutput(ore, Beryllium, 64, 8000, 500)
                .chancedOutput(ore, Thorium, 64, 6000, 500)
                .EUt(VA[MV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_MV)
                .circuitMeta(2)
                .fluidInputs(RP1RocketFuel.getFluid(200))
                .chancedOutput(ore, Redstone, 64, 8000, 500)
                .chancedOutput(ore, Diamond, 64, 7000, 500)
                .chancedOutput(ore, Emerald, 64, 6000, 500)
                .chancedOutput(ore, Ruby, 64, 6000, 500)
                .chancedOutput(ore, Cinnabar, 64, 7000, 500)
                .chancedOutput(ore, Coal, 64, 9000, 500)
                .chancedOutput(ore, Graphite, 64, 6000, 500)
                .chancedOutput(ore, Beryllium, 64, 8000, 500)
                .chancedOutput(ore, Thorium, 64, 6000, 500)
                .EUt(VA[MV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_MV)
                .circuitMeta(12)
                .fluidInputs(DenseHydrazineMixtureFuel.getFluid(200))
                .chancedOutput(ore, Redstone, 64, 8000, 500)
                .chancedOutput(ore, Diamond, 64, 7000, 500)
                .chancedOutput(ore, Emerald, 64, 6000, 500)
                .chancedOutput(ore, Ruby, 64, 6000, 500)
                .chancedOutput(ore, Cinnabar, 64, 7000, 500)
                .chancedOutput(ore, Coal, 64, 9000, 500)
                .chancedOutput(ore, Graphite, 64, 6000, 500)
                .chancedOutput(ore, Beryllium, 64, 8000, 500)
                .chancedOutput(ore, Thorium, 64, 6000, 500)
                .EUt(VA[MV])
                .duration(200)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_MV)
                .circuitMeta(12)
                .fluidInputs(MethylhydrazineNitrateRocketFuel.getFluid(200))
                .chancedOutput(ore, Redstone, 64, 8000, 500)
                .chancedOutput(ore, Diamond, 64, 7000, 500)
                .chancedOutput(ore, Emerald, 64, 6000, 500)
                .chancedOutput(ore, Ruby, 64, 6000, 500)
                .chancedOutput(ore, Cinnabar, 64, 7000, 500)
                .chancedOutput(ore, Coal, 64, 9000, 500)
                .chancedOutput(ore, Graphite, 64, 6000, 500)
                .chancedOutput(ore, Beryllium, 64, 8000, 500)
                .chancedOutput(ore, Thorium, 64, 6000, 500)
                .EUt(VA[MV])
                .duration(200)
                .buildAndRegister();

        //  Lapis-Electrotine
        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_MV)
                .circuitMeta(3)
                .fluidInputs(RocketFuel.getFluid(200))
                .chancedOutput(ore, Lapis, 64, 8000, 500)
                .chancedOutput(ore, Lapis, 64, 8000, 500)
                .chancedOutput(ore, Sodalite, 64, 9000, 500)
                .chancedOutput(ore, Lazurite, 64, 8000, 500)
                .chancedOutput(ore, Calcite, 64, 9000, 500)
                .chancedOutput(ore, Electrotine, 64, 7000, 500)
                .chancedOutput(ore, Saltpeter, 64, 8000, 500)
                .chancedOutput(ore, Diatomite, 64, 6000, 500)
                .chancedOutput(ore, Alunite, 64, 7000, 500)
                .EUt(VA[MV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_MV)
                .circuitMeta(3)
                .fluidInputs(RP1RocketFuel.getFluid(200))
                .chancedOutput(ore, Lapis, 64, 8000, 500)
                .chancedOutput(ore, Lapis, 64, 8000, 500)
                .chancedOutput(ore, Sodalite, 64, 9000, 500)
                .chancedOutput(ore, Lazurite, 64, 8000, 500)
                .chancedOutput(ore, Calcite, 64, 9000, 500)
                .chancedOutput(ore, Electrotine, 64, 7000, 500)
                .chancedOutput(ore, Saltpeter, 64, 8000, 500)
                .chancedOutput(ore, Diatomite, 64, 6000, 500)
                .chancedOutput(ore, Alunite, 64, 7000, 500)
                .EUt(VA[MV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_MV)
                .circuitMeta(13)
                .fluidInputs(DenseHydrazineMixtureFuel.getFluid(200))
                .chancedOutput(ore, Lapis, 64, 8000, 500)
                .chancedOutput(ore, Lapis, 64, 8000, 500)
                .chancedOutput(ore, Sodalite, 64, 9000, 500)
                .chancedOutput(ore, Lazurite, 64, 8000, 500)
                .chancedOutput(ore, Calcite, 64, 9000, 500)
                .chancedOutput(ore, Electrotine, 64, 7000, 500)
                .chancedOutput(ore, Saltpeter, 64, 8000, 500)
                .chancedOutput(ore, Diatomite, 64, 6000, 500)
                .chancedOutput(ore, Alunite, 64, 7000, 500)
                .EUt(VA[MV])
                .duration(200)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_MV)
                .circuitMeta(13)
                .fluidInputs(MethylhydrazineNitrateRocketFuel.getFluid(200))
                .chancedOutput(ore, Lapis, 64, 8000, 500)
                .chancedOutput(ore, Lapis, 64, 8000, 500)
                .chancedOutput(ore, Sodalite, 64, 9000, 500)
                .chancedOutput(ore, Lazurite, 64, 8000, 500)
                .chancedOutput(ore, Calcite, 64, 9000, 500)
                .chancedOutput(ore, Electrotine, 64, 7000, 500)
                .chancedOutput(ore, Saltpeter, 64, 8000, 500)
                .chancedOutput(ore, Diatomite, 64, 6000, 500)
                .chancedOutput(ore, Alunite, 64, 7000, 500)
                .EUt(VA[MV])
                .duration(200)
                .buildAndRegister();

        //  Oilsand-Magnesite
        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_MV)
                .circuitMeta(4)
                .fluidInputs(RocketFuel.getFluid(200))
                .chancedOutput(ore, Oilsands, 64, 9000, 500)
                .chancedOutput(ore, Soapstone, 64, 8000, 500)
                .chancedOutput(ore, Talc, 64, 8000, 500)
                .chancedOutput(ore, GlauconiteSand, 64, 7000, 500)
                .chancedOutput(ore, Trona, 64, 6000, 500)
                .chancedOutput(ore, Magnesite, 64, 7000, 500)
                .chancedOutput(ore, Olivine, 64, 7000, 500)
                .chancedOutput(ore, Bentonite, 64, 7000, 500)
                .chancedOutput(ore, Pollucite, 64, 6000, 500)
                .EUt(VA[MV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_MV)
                .circuitMeta(4)
                .fluidInputs(RP1RocketFuel.getFluid(200))
                .chancedOutput(ore, Oilsands, 64, 9000, 500)
                .chancedOutput(ore, Soapstone, 64, 8000, 500)
                .chancedOutput(ore, Talc, 64, 8000, 500)
                .chancedOutput(ore, GlauconiteSand, 64, 7000, 500)
                .chancedOutput(ore, Trona, 64, 6000, 500)
                .chancedOutput(ore, Magnesite, 64, 7000, 500)
                .chancedOutput(ore, Olivine, 64, 7000, 500)
                .chancedOutput(ore, Bentonite, 64, 7000, 500)
                .chancedOutput(ore, Pollucite, 64, 6000, 500)
                .EUt(VA[MV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_MV)
                .circuitMeta(14)
                .fluidInputs(DenseHydrazineMixtureFuel.getFluid(200))
                .chancedOutput(ore, Oilsands, 64, 9000, 500)
                .chancedOutput(ore, Soapstone, 64, 8000, 500)
                .chancedOutput(ore, Talc, 64, 8000, 500)
                .chancedOutput(ore, GlauconiteSand, 64, 7000, 500)
                .chancedOutput(ore, Trona, 64, 6000, 500)
                .chancedOutput(ore, Magnesite, 64, 7000, 500)
                .chancedOutput(ore, Olivine, 64, 7000, 500)
                .chancedOutput(ore, Bentonite, 64, 7000, 500)
                .chancedOutput(ore, Pollucite, 64, 6000, 500)
                .EUt(VA[MV])
                .duration(200)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_MV)
                .circuitMeta(14)
                .fluidInputs(MethylhydrazineNitrateRocketFuel.getFluid(200))
                .chancedOutput(ore, Oilsands, 64, 9000, 500)
                .chancedOutput(ore, Soapstone, 64, 8000, 500)
                .chancedOutput(ore, Talc, 64, 8000, 500)
                .chancedOutput(ore, GlauconiteSand, 64, 7000, 500)
                .chancedOutput(ore, Trona, 64, 6000, 500)
                .chancedOutput(ore, Magnesite, 64, 7000, 500)
                .chancedOutput(ore, Olivine, 64, 7000, 500)
                .chancedOutput(ore, Bentonite, 64, 7000, 500)
                .chancedOutput(ore, Pollucite, 64, 6000, 500)
                .EUt(VA[MV])
                .duration(200)
                .buildAndRegister();
    }

    private static void HVstage() {

        //  Lithium-Tungsten-Molybdenum
        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_HV)
                .circuitMeta(1)
                .fluidInputs(RocketFuel.getFluid(400))
                .chancedOutput(ore, Lithium, 64, 9000, 500)
                .chancedOutput(ore, Molybdenum, 64, 7000, 500)
                .chancedOutput(ore, Scheelite, 64, 6000, 500)
                .chancedOutput(ore, Tungstate, 64, 6000, 500)
                .chancedOutput(ore, Wulfenite, 64, 8000, 500)
                .chancedOutput(ore, Molybdenite, 64, 8000, 500)
                .chancedOutput(ore, Powellite, 64, 7000, 500)
                .chancedOutput(ore, Chromite, 64, 7000, 500)
                .chancedOutput(ore, Ilmenite, 64, 6000, 500)
                .EUt(VA[HV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_HV)
                .circuitMeta(1)
                .fluidInputs(RP1RocketFuel.getFluid(400))
                .chancedOutput(ore, Lithium, 64, 9000, 500)
                .chancedOutput(ore, Molybdenum, 64, 7000, 500)
                .chancedOutput(ore, Scheelite, 64, 6000, 500)
                .chancedOutput(ore, Tungstate, 64, 6000, 500)
                .chancedOutput(ore, Wulfenite, 64, 8000, 500)
                .chancedOutput(ore, Molybdenite, 64, 8000, 500)
                .chancedOutput(ore, Powellite, 64, 7000, 500)
                .chancedOutput(ore, Chromite, 64, 7000, 500)
                .chancedOutput(ore, Ilmenite, 64, 6000, 500)
                .EUt(VA[HV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_HV)
                .circuitMeta(11)
                .fluidInputs(DenseHydrazineMixtureFuel.getFluid(400))
                .chancedOutput(ore, Lithium, 64, 9000, 500)
                .chancedOutput(ore, Molybdenum, 64, 7000, 500)
                .chancedOutput(ore, Scheelite, 64, 6000, 500)
                .chancedOutput(ore, Tungstate, 64, 6000, 500)
                .chancedOutput(ore, Wulfenite, 64, 8000, 500)
                .chancedOutput(ore, Molybdenite, 64, 8000, 500)
                .chancedOutput(ore, Powellite, 64, 7000, 500)
                .chancedOutput(ore, Chromite, 64, 7000, 500)
                .chancedOutput(ore, Ilmenite, 64, 6000, 500)
                .EUt(VA[HV])
                .duration(200)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_HV)
                .circuitMeta(11)
                .fluidInputs(MethylhydrazineNitrateRocketFuel.getFluid(400))
                .chancedOutput(ore, Lithium, 64, 9000, 500)
                .chancedOutput(ore, Molybdenum, 64, 7000, 500)
                .chancedOutput(ore, Scheelite, 64, 6000, 500)
                .chancedOutput(ore, Tungstate, 64, 6000, 500)
                .chancedOutput(ore, Wulfenite, 64, 8000, 500)
                .chancedOutput(ore, Molybdenite, 64, 8000, 500)
                .chancedOutput(ore, Powellite, 64, 7000, 500)
                .chancedOutput(ore, Chromite, 64, 7000, 500)
                .chancedOutput(ore, Ilmenite, 64, 6000, 500)
                .EUt(VA[HV])
                .duration(200)
                .buildAndRegister();

        //  Neodymium-Platinum-Palladium
        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_HV)
                .circuitMeta(2)
                .fluidInputs(RocketFuel.getFluid(400))
                .chancedOutput(ore, Neodymium, 64, 6000, 500)
                .chancedOutput(ore, Platinum, 64, 7000, 500)
                .chancedOutput(ore, Palladium, 64, 7000, 500)
                .chancedOutput(ore, Bastnasite, 64, 8000, 500)
                .chancedOutput(ore, Monazite, 64, 7000, 500)
                .chancedOutput(ore, Cooperite, 64, 8000, 500)
                .chancedOutput(ore, Bornite, 64, 9000, 500)
                .chancedOutput(ore, Tantalite, 64, 8000, 500)
                .chancedOutput(ore, Pyrolusite, 64, 8000, 500)
                .EUt(VA[HV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_HV)
                .circuitMeta(2)
                .fluidInputs(RP1RocketFuel.getFluid(400))
                .chancedOutput(ore, Neodymium, 64, 6000, 500)
                .chancedOutput(ore, Platinum, 64, 7000, 500)
                .chancedOutput(ore, Palladium, 64, 7000, 500)
                .chancedOutput(ore, Bastnasite, 64, 8000, 500)
                .chancedOutput(ore, Monazite, 64, 7000, 500)
                .chancedOutput(ore, Cooperite, 64, 8000, 500)
                .chancedOutput(ore, Bornite, 64, 9000, 500)
                .chancedOutput(ore, Tantalite, 64, 8000, 500)
                .chancedOutput(ore, Pyrolusite, 64, 8000, 500)
                .EUt(VA[HV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_HV)
                .circuitMeta(12)
                .fluidInputs(DenseHydrazineMixtureFuel.getFluid(400))
                .chancedOutput(ore, Neodymium, 64, 6000, 500)
                .chancedOutput(ore, Platinum, 64, 7000, 500)
                .chancedOutput(ore, Palladium, 64, 7000, 500)
                .chancedOutput(ore, Bastnasite, 64, 8000, 500)
                .chancedOutput(ore, Monazite, 64, 7000, 500)
                .chancedOutput(ore, Cooperite, 64, 8000, 500)
                .chancedOutput(ore, Bornite, 64, 9000, 500)
                .chancedOutput(ore, Tantalite, 64, 8000, 500)
                .chancedOutput(ore, Pyrolusite, 64, 8000, 500)
                .EUt(VA[HV])
                .duration(200)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_HV)
                .circuitMeta(12)
                .fluidInputs(MethylhydrazineNitrateRocketFuel.getFluid(400))
                .chancedOutput(ore, Neodymium, 64, 6000, 500)
                .chancedOutput(ore, Platinum, 64, 7000, 500)
                .chancedOutput(ore, Palladium, 64, 7000, 500)
                .chancedOutput(ore, Bastnasite, 64, 8000, 500)
                .chancedOutput(ore, Monazite, 64, 7000, 500)
                .chancedOutput(ore, Cooperite, 64, 8000, 500)
                .chancedOutput(ore, Bornite, 64, 9000, 500)
                .chancedOutput(ore, Tantalite, 64, 8000, 500)
                .chancedOutput(ore, Pyrolusite, 64, 8000, 500)
                .EUt(VA[HV])
                .duration(200)
                .buildAndRegister();

        //  Sapphire-Amethyst
        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_HV)
                .circuitMeta(3)
                .fluidInputs(RocketFuel.getFluid(400))
                .chancedOutput(ore, Sapphire, 64, 7000, 500)
                .chancedOutput(ore, Almandine, 64, 7000, 500)
                .chancedOutput(ore, Pyrope, 64, 8000, 500)
                .chancedOutput(ore, GreenSapphire, 64, 8000, 500)
                .chancedOutput(ore, Amethyst, 64, 9000, 500)
                .chancedOutput(ore, GarnetRed, 64, 8000, 500)
                .chancedOutput(ore, GarnetYellow, 64, 8000, 500)
                .chancedOutput(ore, GarnetSand, 64, 8000, 500)
                .chancedOutput(ore, Opal, 64, 8000, 500)
                .EUt(VA[HV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_HV)
                .circuitMeta(3)
                .fluidInputs(RP1RocketFuel.getFluid(400))
                .chancedOutput(ore, Sapphire, 64, 7000, 500)
                .chancedOutput(ore, Almandine, 64, 7000, 500)
                .chancedOutput(ore, Pyrope, 64, 8000, 500)
                .chancedOutput(ore, GreenSapphire, 64, 8000, 500)
                .chancedOutput(ore, Amethyst, 64, 9000, 500)
                .chancedOutput(ore, GarnetRed, 64, 8000, 500)
                .chancedOutput(ore, GarnetYellow, 64, 8000, 500)
                .chancedOutput(ore, GarnetSand, 64, 8000, 500)
                .chancedOutput(ore, Opal, 64, 8000, 500)
                .EUt(VA[HV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_HV)
                .circuitMeta(13)
                .fluidInputs(DenseHydrazineMixtureFuel.getFluid(400))
                .chancedOutput(ore, Sapphire, 64, 7000, 500)
                .chancedOutput(ore, Almandine, 64, 7000, 500)
                .chancedOutput(ore, Pyrope, 64, 8000, 500)
                .chancedOutput(ore, GreenSapphire, 64, 8000, 500)
                .chancedOutput(ore, Amethyst, 64, 9000, 500)
                .chancedOutput(ore, GarnetRed, 64, 8000, 500)
                .chancedOutput(ore, GarnetYellow, 64, 8000, 500)
                .chancedOutput(ore, GarnetSand, 64, 8000, 500)
                .chancedOutput(ore, Opal, 64, 8000, 500)
                .EUt(VA[HV])
                .duration(200)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_HV)
                .circuitMeta(13)
                .fluidInputs(MethylhydrazineNitrateRocketFuel.getFluid(400))
                .chancedOutput(ore, Sapphire, 64, 7000, 500)
                .chancedOutput(ore, Almandine, 64, 7000, 500)
                .chancedOutput(ore, Pyrope, 64, 8000, 500)
                .chancedOutput(ore, GreenSapphire, 64, 8000, 500)
                .chancedOutput(ore, Amethyst, 64, 9000, 500)
                .chancedOutput(ore, GarnetRed, 64, 8000, 500)
                .chancedOutput(ore, GarnetYellow, 64, 8000, 500)
                .chancedOutput(ore, GarnetSand, 64, 8000, 500)
                .chancedOutput(ore, Opal, 64, 8000, 500)
                .EUt(VA[HV])
                .duration(200)
                .buildAndRegister();

        //  Copper-Tantalum
        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_HV)
                .circuitMeta(4)
                .fluidInputs(RocketFuel.getFluid(400))
                .chancedOutput(ore, Malachite, 64, 9000, 500)
                .chancedOutput(ore, Apatite, 64, 8000, 500)
                .chancedOutput(ore, TricalciumPhosphate, 64, 8000, 500)
                .chancedOutput(ore, Realgar, 64, 9000, 500)
                .chancedOutput(ore, Grossular, 64, 8000, 500)
                .chancedOutput(ore, Pyrolusite, 64, 7000, 500)
                .chancedOutput(ore, Spessartine, 64, 7000, 500)
                .chancedOutput(ore, Tantalite, 64, 6000, 500)
                .chancedOutput(ore, Pyrochlore, 64, 8000, 500)
                .EUt(VA[HV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_HV)
                .circuitMeta(4)
                .fluidInputs(RP1RocketFuel.getFluid(400))
                .chancedOutput(ore, Malachite, 64, 9000, 500)
                .chancedOutput(ore, Apatite, 64, 8000, 500)
                .chancedOutput(ore, TricalciumPhosphate, 64, 8000, 500)
                .chancedOutput(ore, Realgar, 64, 9000, 500)
                .chancedOutput(ore, Grossular, 64, 8000, 500)
                .chancedOutput(ore, Pyrolusite, 64, 7000, 500)
                .chancedOutput(ore, Spessartine, 64, 7000, 500)
                .chancedOutput(ore, Tantalite, 64, 6000, 500)
                .chancedOutput(ore, Pyrochlore, 64, 8000, 500)
                .EUt(VA[HV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_HV)
                .circuitMeta(14)
                .fluidInputs(DenseHydrazineMixtureFuel.getFluid(400))
                .chancedOutput(ore, Malachite, 64, 9000, 500)
                .chancedOutput(ore, Apatite, 64, 8000, 500)
                .chancedOutput(ore, TricalciumPhosphate, 64, 8000, 500)
                .chancedOutput(ore, Realgar, 64, 9000, 500)
                .chancedOutput(ore, Grossular, 64, 8000, 500)
                .chancedOutput(ore, Pyrolusite, 64, 7000, 500)
                .chancedOutput(ore, Spessartine, 64, 7000, 500)
                .chancedOutput(ore, Tantalite, 64, 6000, 500)
                .chancedOutput(ore, Pyrochlore, 64, 8000, 500)
                .EUt(VA[HV])
                .duration(200)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_HV)
                .circuitMeta(14)
                .fluidInputs(MethylhydrazineNitrateRocketFuel.getFluid(400))
                .chancedOutput(ore, Malachite, 64, 9000, 500)
                .chancedOutput(ore, Apatite, 64, 8000, 500)
                .chancedOutput(ore, TricalciumPhosphate, 64, 8000, 500)
                .chancedOutput(ore, Realgar, 64, 9000, 500)
                .chancedOutput(ore, Grossular, 64, 8000, 500)
                .chancedOutput(ore, Pyrolusite, 64, 7000, 500)
                .chancedOutput(ore, Spessartine, 64, 7000, 500)
                .chancedOutput(ore, Tantalite, 64, 6000, 500)
                .chancedOutput(ore, Pyrochlore, 64, 8000, 500)
                .EUt(VA[HV])
                .duration(200)
                .buildAndRegister();
    }

    private static void EVstage() {

        //  Naquadah-Plutonium-Uranium
        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_EV)
                .circuitMeta(1)
                .fluidInputs(RocketFuel.getFluid(800))
                .chancedOutput(ore, Naquadah, 64, 6000, 500)
                .chancedOutput(ore, Naquadah, 64, 6000, 500)
                .chancedOutput(ore, Naquadah, 64, 6000, 500)
                .chancedOutput(ore, Plutonium239, 64, 7000, 500)
                .chancedOutput(ore, Uraninite, 64, 8000, 500)
                .chancedOutput(ore, Uraninite, 64, 8000, 500)
                .chancedOutput(ore, Pitchblende, 64, 8000, 500)
                .chancedOutput(ore, Pitchblende, 64, 8000, 500)
                .chancedOutput(ore, Pyrochlore,  64, 9000, 500)
                .EUt(VA[EV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_EV)
                .circuitMeta(1)
                .fluidInputs(RP1RocketFuel.getFluid(800))
                .chancedOutput(ore, Naquadah, 64, 6000, 500)
                .chancedOutput(ore, Naquadah, 64, 6000, 500)
                .chancedOutput(ore, Naquadah, 64, 6000, 500)
                .chancedOutput(ore, Plutonium239, 64, 7000, 500)
                .chancedOutput(ore, Uraninite, 64, 8000, 500)
                .chancedOutput(ore, Uraninite, 64, 8000, 500)
                .chancedOutput(ore, Pitchblende, 64, 8000, 500)
                .chancedOutput(ore, Pitchblende, 64, 8000, 500)
                .chancedOutput(ore, Pyrochlore,  64, 9000, 500)
                .EUt(VA[EV])
                .duration(400)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_EV)
                .circuitMeta(11)
                .fluidInputs(DenseHydrazineMixtureFuel.getFluid(800))
                .chancedOutput(ore, Naquadah, 64, 6000, 500)
                .chancedOutput(ore, Naquadah, 64, 6000, 500)
                .chancedOutput(ore, Naquadah, 64, 6000, 500)
                .chancedOutput(ore, Plutonium239, 64, 7000, 500)
                .chancedOutput(ore, Uraninite, 64, 8000, 500)
                .chancedOutput(ore, Uraninite, 64, 8000, 500)
                .chancedOutput(ore, Pitchblende, 64, 8000, 500)
                .chancedOutput(ore, Pitchblende, 64, 8000, 500)
                .chancedOutput(ore, Pyrochlore,  64, 9000, 500)
                .EUt(VA[EV])
                .duration(200)
                .buildAndRegister();

        DRONE_AIRPORT_RECIPES.recipeBuilder()
                .notConsumable(MINING_DRONE_EV)
                .circuitMeta(11)
                .fluidInputs(MethylhydrazineNitrateRocketFuel.getFluid(800))
                .chancedOutput(ore, Naquadah, 64, 6000, 500)
                .chancedOutput(ore, Naquadah, 64, 6000, 500)
                .chancedOutput(ore, Naquadah, 64, 6000, 500)
                .chancedOutput(ore, Plutonium239, 64, 7000, 500)
                .chancedOutput(ore, Uraninite, 64, 8000, 500)
                .chancedOutput(ore, Uraninite, 64, 8000, 500)
                .chancedOutput(ore, Pitchblende, 64, 8000, 500)
                .chancedOutput(ore, Pitchblende, 64, 8000, 500)
                .chancedOutput(ore, Pyrochlore,  64, 9000, 500)
                .EUt(VA[EV])
                .duration(200)
                .buildAndRegister();
    }
}